<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="get-custid-implementation-orderFlow" doc:id="60db07f1-7ed2-4178-bfed-240c21714e85" >
		<logger level="DEBUG" doc:name="Logger" doc:id="367b5926-53ef-4fa4-9579-f1b16238b2a1" message="#[payload]"/>
		<db:select doc:name="Select" doc:id="735bebe8-3b95-47c6-818b-8f1a8f2b54f8" config-ref="Database_Config">
			<db:sql>Select t2.orderId, t2.placementDate, t2.customerID, t2.status, t2.totalPrice, t1.itemId, t1.itemCount, t1.price, t1.itemName
 from orderItems t1 INNER JOIN orderMaster t2 on t1.orderId=t2.orderId 
where t2.customerID=:custID</db:sql>
			<db:input-parameters><![CDATA[#[%dw 2.0
output application/java
---
{
		custID: attributes.queryParams.'customerId' as Number{format:""}
}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="f3e91de5-840a-4f0a-86ec-30b0f2d05560" >
			<when expression="#[sizeOf(payload) != 0]">
				<ee:transform doc:name="Transform Message" doc:id="d71fea68-00e1-49e6-b4cc-8d2ca221dae8">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
(payload  groupBy(orders)->orders.orderID) pluck(v,k,i) -> {
	orderID: v.orderId[0] as Number default 0,
	placementDate: v.placementDate[0] default "",
	customerId: v.customerID[0] default 0,
	status: v.status[0] default "",
	totalPrice: v.totalPrice[0] default 0,
	orderItem:v map(x,y)-> {
		itemId: x.itemId as Number default 0,
		itemName: x.itemName default "",
		price: x.price default 0,
		quantity: x.itemCount default 0
	}
}



]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<raise-error doc:name="Raise error" doc:id="06271a11-9653-4be6-aa03-e0a2841bd50e" type="ORDER:VALUEISNULL" description="The Customer id does not exists"/>
			</otherwise>
		</choice>
		
	</flow>
</mule>
